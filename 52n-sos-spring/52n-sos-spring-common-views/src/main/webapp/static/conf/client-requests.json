{
    "1.0.0": {
        "/pox": {
            "GetCapabilities": {
                "GetCapabilities - All Sections": {
                    "request": "static/examples/sos_v100/requests_xml/GetCapabilities/GetCapabilities_allSections.xml"
                }
            },
            "DescribeSensor": {
                "DescribeSensor": {
                    "request": "static/examples/sos_v100/requests_xml/DescribeSensor/DescribeSensor_basicRequest.xml"
                }
            },
            "GetFeatureOfInterest": {
                "GetFeatureOfInterest - FeatureOfInterestId": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/GetFoi_foiID.xml"
                },
                "GetFeatureOfInterest - BoundingBox": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_BBOX.xml"
                },
                "GetFeatureOfInterest - Contains Envelope": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_Contains_Envelope.xml"
                },
                "GetFeatureOfInterest - Contains LineString": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_Contains_LineString.xml"
                },
                "GetFeatureOfInterest - Contains Point": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_Contains_Point.xml"
                },
                "GetFeatureOfInterest - Contains Polygon": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_Contains_Polygon.xml"
                },
                "GetFeatureOfInterest - Intersects Envelope": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_Intersects_Envelope.xml"
                },
                "GetFeatureOfInterest - Intersects LineString": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_Intersects_LineString.xml"
                },
                "GetFeatureOfInterest - Intersects Point": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_Intersects_Point.xml"
                },
                "GetFeatureOfInterest - Intersects Polygon": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_Intersects_Polygon.xml"
                },
                "GetFeatureOfInterest - Overlaps Envelope": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_Overlaps_Envelope.xml"
                },
                "GetFeatureOfInterest - Overlaps LineString": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_Overlaps_LineString.xml"
                },
                "GetFeatureOfInterest - Overlaps Point": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_Overlaps_Point.xml"
                },
                "GetFeatureOfInterest - Overlaps Polygon": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/SpatialFilter/getFoi_SF_Overlaps_Polygon.xml"
                }
            },
            "GetFeatureOfInterestTime": {
                "GetFeatureOfInterestTime": {
                    "request": "static/examples/sos_v100/requests_xml/GetFOI/GetFoiTime.xml"
                }
            },
            "GetObservation": {
                "GetObservation - All Parameters": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_allParameters.xml"
                },
                "GetObservation - Basic Parameters": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_basic.xml"
                },
                "GetObservation - FeatureOfInterestId": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_foiID.xml"
                },
                "GetObservation - First Observation": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_getFirstObs.xml"
                },
                "GetObservation - Latest Observation": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_latestObs.xml"
                },
                "GetObservation - Procedure": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_procedure.xml"
                },
                "GetObservation - Spatial Observations": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_spatialObs_basic.xml"
                },
                "GetObservation - Spatial Observations - FeatureOfInterest": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_spatialObs_foi.xml"
                },
                "GetObservation - Spatial Observations - Geometry": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_spatialObs_geometry.xml"
                },
                "GetObservation - Multiple Procedures": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_multiple_procedures.xml"
                },
                "GetObservation - TimePeriod": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_timePeriod.xml"
                },
                "GetObservation - ResultFilter - Numeric - Between": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Num_Betw.xml"
                },
                "GetObservation - ResultFilter - Numeric - EqualTo": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Num_ET.xml"
                },
                "GetObservation - ResultFilter - Numeric - GreaterThan": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Num_GT.xml"
                },
                "GetObservation - ResultFilter - Numeric - GreaterThanOrEqualTo": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Num_GTOET.xml"
                },
                "GetObservation - ResultFilter - Numeric - IsLike": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Num_IsLike.xml"
                },
                "GetObservation - ResultFilter - Numeric - IsNull": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Num_IsNull.xml"
                },
                "GetObservation - ResultFilter - Numeric - LowerThan": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Num_LT.xml"
                },
                "GetObservation - ResultFilter - Numeric - LowerThanOrEqualTo": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Num_LTOET.xml"
                },
                "GetObservation - ResultFilter - Numeric - NotEqualTo": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Num_NET.xml"
                },
                "GetObservation - ResultFilter - Text - EqualTo": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Text_ET.xml"
                },
                "GetObservation - ResultFilter - Text - IsLike": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Text_IsLike.xml"
                },
                "GetObservation - ResultFilter - Text - IsNull": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Text_IsNull.xml"
                },
                "GetObservation - ResultFilter - Text - NotEqualTo": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/ResultFilter/GetObs_RF_Text_NET.xml"
                },
                "GetObservation - SpatialFilter - BoundingBox": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_BBOX.xml"
                },
                "GetObservation - SpatialFilter - Contains Envelope": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_Contains_Envelope.xml"
                },
                "GetObservation - SpatialFilter - Contains LineString": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_Contains_LineString.xml"
                },
                "GetObservation - SpatialFilter - Contains Point": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_Contains_Point.xml"
                },
                "GetObservation - SpatialFilter - Contains Polygon": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_Contains_Polygon.xml"
                },
                "GetObservation - SpatialFilter - Intersects Envelope": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_Intersects_Envelope.xml"
                },
                "GetObservation - SpatialFilter - Intersects LineString": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_Intersects_LineString.xml"
                },
                "GetObservation - SpatialFilter - Intersects Point": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_Intersects_Point.xml"
                },
                "GetObservation - SpatialFilter - Intersects Polygon": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_Intersects_Polygon.xml"
                },
                "GetObservation - SpatialFilter - Overlaps Envelope": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_Overlaps_Envelope.xml"
                },
                "GetObservation - SpatialFilter - Overlaps LineString": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_Overlaps_LineString.xml"
                },
                "GetObservation - SpatialFilter - Overlaps Point": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_Overlaps_Point.xml"
                },
                "GetObservation - SpatialFilter - Overlaps Polygon": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/SpatialFilter/getObs_SF_Overlaps_Polygon.xml"
                },
                "GetObservation - AllTypes": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_basic_allTypes.xml"
                },
                "GetObservation - AllTypes - Measurements": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_allTypes_Measurements.xml"
                },
                "GetObservation - AllTypes - CategoryObservations": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_allTypes_CategoryObs.xml"
                },
                "GetObservation - AllTypes - SpatialObservations": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservation/GetObs_allTypes_SpatialObs.xml"
                },
                "GetObservation for GetResult": {
                    "request": "static/examples/sos_v100/requests_xml/GetResult/GetObs4GetResult_FoiID.xml"
                }
            },
            "GetObservationById": {
                "GetObservationById": {
                    "request": "static/examples/sos_v100/requests_xml/GetObservationById/GetObservationById.xml"
                }
            },
            "GetResult": {
                "GetResult": {
                    "request": "static/examples/sos_v100/requests_xml/GetResult/getResult.xml"
                }
            },
            "GetResultTime": {
                "GetResultTime": {
                    "request": "static/examples/sos_v100/requests_xml/GetResult/getResultTime.xml"
                }
            },
            "InsertObservation": {
                "InsertObservation - Geometry - MovingObject": {
                    "request": "static/examples/sos_v100/requests_xml/InsertObservation/InsertObs_geometry_movingObject.xml"
                },
                "InsertObservation - Geometry": {
                    "request": "static/examples/sos_v100/requests_xml/InsertObservation/InsertObs_geometry.xml"
                },
                "InsertObservation - CategoryObservation": {
                    "request": "static/examples/sos_v100/requests_xml/InsertObservation/InsertObservation_categoryObservation.xml"
                },
                "InsertObservation - SamplingSurface": {
                    "request": "static/examples/sos_v100/requests_xml/InsertObservation/InsertObservation_samplingSurface.xml"
                },
                "InsertObservation - SamplingPoint": {
                    "request": "static/examples/sos_v100/requests_xml/InsertObservation/InsertObservation_samplingPoint.xml"
                },
                "InsertObservation - GenericObservation - Derwent": {
                    "request": "static/examples/sos_v100/requests_xml/InsertObservation/InsertObservation_GenericObs_Derwent.xml"
                },
                "InsertObservation - GenericObservation - Derwent 2": {
                    "request": "static/examples/sos_v100/requests_xml/InsertObservation/InsertObservation_GenericObs_Derwent_2.xml"
                },
                "InsertObservation - RegisterSensor - FeatureOfInterest": {
                    "request": "static/examples/sos_v100/requests_xml/InsertObservation/InsertObservation_4_RegSen_withFOI.xml"
                },
                "InsertObservation - Measurement": {
                    "request": "static/examples/sos_v100/requests_xml/InsertObservation/InsertObservation_Measurement.xml"
                },
                "InsertObservation - GenericObservation - AllTypes": {
                    "request": "static/examples/sos_v100/requests_xml/InsertObservation/InsertObservation_GenericObs_allTypes.xml"
                },
                "InsertObservation - GenericObservation - No ID's": {
                    "request": "static/examples/sos_v100/requests_xml/InsertObservation/InsertObservation_GenericObs_noIDs.xml"
                }
            },
            "RegisterSensor": {
               "RegisterSensor - CategoryObservation": {
                    "request": "static/examples/sos_v100/requests_xml/RegisterSensor/RegisterSensor_categoryObservation.xml"
                },
                "RegisterSensor - Measurement": {
                    "request": "static/examples/sos_v100/requests_xml/RegisterSensor/RegisterSensor_measurement.xml"
                },
                "RegisterSensor - Measurement - Derwent": {
                    "request": "static/examples/sos_v100/requests_xml/RegisterSensor/RegisterSensor_Measurement_Derwent.xml"
                },
                "RegisterSensor - Measurement - Derwent 2": {
                    "request": "static/examples/sos_v100/requests_xml/RegisterSensor/RegisterSensor_Observation_Derwent_2.xml"
                },
                "RegisterSensor - Geometry": {
                    "request": "static/examples/sos_v100/requests_xml/RegisterSensor/RegisterSensor_geometry.xml"
                },
                "RegisterSensor - FeatureOfInterest": {
                    "request": "static/examples/sos_v100/requests_xml/RegisterSensor/RegisterSensor_withFOI.xml"
                },
                "RegisterSensor - Observation - AllTypes": {
                    "request": "static/examples/sos_v100/requests_xml/RegisterSensor/RegisterSensor_Observation_allTypes.xml"
                },
                "RegisterSensor - Observation - No ID's": {
                    "request": "static/examples/sos_v100/requests_xml/RegisterSensor/RegisterSensor_Observation_noIDs.xml"
                } 
            }
        },
        "/soap": {
            "GetCapabilities": {
                "GetCapabilities - All Sections (SOAP 1.1)": {
                    "request": "static/examples/sos_v100/requests_soap/GetCapabilities_allSections_soap_11.xml"
                },
                "GetCapabilities - All Sections (SOAP 1.2)": {
                    "request": "static/examples/sos_v100/requests_soap/GetCapabilities_allSections_soap_12.xml"
                }
            },
            "DescribeSensor": {
                "DescribeSensor (SOAP 1.2)": {
                    "request": "static/examples/sos_v100/requests_soap/DescribeSensor_basic_soap_12.xml"
                }
            },
            "GetFeatureOfInterest": {
                "GetFeatureOfInterest (SOAP 1.2)": {
                    "request": "static/examples/sos_v100/requests_soap/GetFoi_foiID_soap_12.xml"
                }
            },
            "GetObservation": {
                "GetObservation - All Parameters (SOAP 1.2)": {
                    "request": "static/examples/sos_v100/requests_soap/GetObs_allParams_soap_12.xml"
                },
                "GetObservation (SOAP 1.2)": {
                    "request": "static/examples/sos_v100/requests_soap/GetObs_basic_soap_12.xml"
                }
            },
            "InsertObservation": {
                "InsertObservation (SOAP 1.2)": {
                    "request": "static/examples/sos_v100/requests_soap/InsertObservation_soap_12.xml"
                }
            },
            "RegisterSensor": {
                "RegisterSensor (SOAP 1.2)": {
                    "request": "static/examples/sos_v100/requests_soap/RegisterSensor_soap_12.xml"
                }    
            }
        },
        "/kvp": {
            "GetCapabilities": {
                "GetCapabilities": {
                    "param": {
                        "service:": "SOS",
                        "request": "GetCapabilities",
                        "AcceptVersions": "1.0.0"    
                    }
                }
            }
        }
    },
    "2.0.0": {
        "/kvp": {
            "GetCapabilities": {
                "GetCapabilities (minimal)": {
                    "param": {
                        "service": "SOS",
                        "request": "GetCapabilities"
                    }
                },
                "GetCapabilities (with AcceptVersions=2.0.0)": {
                    "param": {
                        "service": "SOS",
                        "request": "GetCapabilities",
                        "AcceptVersions": "2.0.0"
                    }
                },
                "GetCapabilities (only OperationsMetadata section)": {
                    "param": {
                        "service": "SOS",
                        "request": "GetCapabilities",
                        "Sections": "OperationsMetadata"
                    }
                },
                "GetCapabilities (only Contents section)": {
                    "param": {
                        "service": "SOS",
                        "request": "GetCapabilities",
                        "Sections": "Contents"
                    }
                }
            },
            "DescribeSensor": {
                "DescribeSensor": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "DescribeSensor",
                        "procedure": "http://www.example.org/sensors/101",
                        "procedureDescriptionFormat": "http://www.opengis.net/sensorML/1.0.1"
                    }
                }
            },
            "GetObservation": {
                "GetObservation (full)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "offering": "test_offering_1",
                        "observedProperty": "test_observable_property_1",
                        "procedure": "http://www.example.org/sensors/101",
                        "namespaces": [
                            "xmlns(sams,http://www.opengis.net/samplingSpatial/2.0)",
                            "xmlns(om,http://www.opengis.net/om/2.0)"
                        ],
                        "spatialFilter": "om:featureOfInterest/*/sams:shape,0.0,0.0,60.0,60.0,urn:ogc:def:crs:EPSG::4326",
                        "temporalFilter": "om:phenomenonTime,2012-11-19T13:00:00+01:00/2012-11-19T13:15:00+01:00"
                    }
                },
                "GetObservation (offering)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "offering": "test_offering_1"
                    }
                },
                "GetObservation (offerings)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "offering":  [ 
                            "test_offering_1", 
                            "test_offering_3" 
                        ]
                    }
                },
                "GetObservation (procedure)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "procedure": "http://www.example.org/sensors/101"
                    }
                },
                "GetObservation (procedures)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "procedure": [
                            "http://www.example.org/sensors/101",
                            "http://www.example.org/sensors/103"
                        ]
                    }
                },
                "GetObservation (observableProperty)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "observedProperty": "test_observable_property_1"
                    }
                },
                "GetObservation (observableProperties)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "observedProperty": [ 
                            "test_observable_property_1",
                            "test_observable_property_3"
                        ]
                    }
                },
                "GetObservation (featureOfInterest)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "featureOfInterest": "test_feature_1"
                    }
                },
                "GetObservation (featureOfInterests)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "featureOfInterest": [ "test_feature_1", "test_feature_3" ]
                    }
                },
                "GetObservation (spatial filter, URN)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "namespaces": [
                            "xmlns(sams,http://www.opengis.net/samplingSpatial/2.0)",
                            "xmlns(om,http://www.opengis.net/om/2.0)"
                         ],
                         "spatialFilter": "om:featureOfInterest/*/sams:shape,0.0,0.0,60.0,60.0,urn:ogc:def:crs:EPSG::4326"
                    }
                },
                "GetObservation (spatial filter, URL)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "namespaces": [
                            "xmlns(sams,http://www.opengis.net/samplingSpatial/2.0)",
                            "xmlns(om,http://www.opengis.net/om/2.0)"
                        ],
                        "spatialFilter": "om:featureOfInterest/*/sams:shape,0.0,0.0,60.0,60.0,http://www.opengis.net/def/crs/EPSG/0/4326"
                    }
                },
                "GetObservation (temporal filter equal)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "namespaces": "xmlns(om,http://www.opengis.net/om/2.0)",
                        "temporalFilter": "om:phenomenonTime,2012-11-19T13:00:00.000+01:00"
                    }
                },
                "GetObservation (temporal filter during)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetObservation",
                        "namespaces": "xmlns(om,http://www.opengis.net/om/2.0)",
                        "temporalFilter": "om:phenomenonTime,2012-11-19T13:00:00+01:00/2012-11-19T13:15:00+01:00"
                    }
                }
            },
            "GetFeatureOfInterest": {
                "GetFeatureOfInterest (minimal)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetFeatureOfInterest"
                    }
                },
                "GetFeatureOfInterest (procedure)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetFeatureOfInterest",
                        "procedure": "http://www.example.org/sensors/101"
                    }
                },
                "GetFeatureOfInterest (procedures)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetFeatureOfInterest",
                        "procedure": [
                            "http://www.example.org/sensors/101", 
                            "http://www.example.org/sensors/102"
                        ]
                    }
                },
                "GetFeatureOfInterest (observableProperty)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetFeatureOfInterest",
                        "observedProperty": "test_observable_property_1"
                    }
                },
                "GetFeatureOfInterest (observableProperties)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetFeatureOfInterest",
                        "observedProperty": [
                            "test_observable_property_1",
                            "test_observable_property_2"
                        ]
                    }
                },
                "GetFeatureOfInterest (featureOfInterest)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetFeatureOfInterest",
                        "featureOfInterest": "test_feature_1"
                    }
                },
                "GetFeatureOfInterest (featureOfInterests)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetFeatureOfInterest",
                        "featureOfInterest": [
                            "test_feature_1", 
                            "test_feature_2"
                        ]
                    }
                },
                "GetFeatureOfInterest (spatial filter, URN)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetFeatureOfInterest",
                        "namespaces": [
                            "xmlns(sams,http://www.opengis.net/samplingSpatial/2.0)",
                            "xmlns(om,http://www.opengis.net/om/2.0)"
                         ],
                         "spatialFilter": "om:featureOfInterest/*/sams:shape,0.0,0.0,60.0,60.0,urn:ogc:def:crs:EPSG::4326"
                    }
                },
                "GetFeatureOfInterest (spatial filter, URL)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0",
                        "request": "GetFeatureOfInterest",
                        "namespaces": [
                            "xmlns(sams,http://www.opengis.net/samplingSpatial/2.0)",
                            "xmlns(om,http://www.opengis.net/om/2.0)"
                        ],
                        "spatialFilter": "om:featureOfInterest/*/sams:shape,0.0,0.0,60.0,60.0,http://www.opengis.net/def/crs/EPSG/0/4326"
                    }
                }  
            },
            "GetDataAvailability": {
                "GetDataAvailability (minimal)": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0", 
                        "request": "GetDataAvailability"
                    }
                },
                "GetDataAvailability": {
                    "param": {
                        "service": "SOS",
                        "version": "2.0.0", 
                        "request": "GetDataAvailability",
                        "observedProperty": [
                            "test_observable_property_1",
                            "test_observable_property_3"
                        ],
                        "procedure": [
                            "http://www.example.org/sensors/101", 
                            "http://www.example.org/sensors/103"
                        ],
                        "featureOfInterest": [
                            "test_feature_1",
                            "test_feature_3",
                            "test_feature_4"
                        ]
                    }
                }
            }
        },
        "/soap": {
            "GetCapabilities": {
                "GetCapabilities": {
                    "request": "static/examples/sos_v20/requests_soap/GetCapabilities.xml"
                }
            },
            "DescribeSensor": {
                "DescribeSensor": {
                    "request": "static/examples/sos_v20/requests_soap/DescribeSensor.xml"
                }
            },
            "GetObservation": {
                "GetObservation": {
                    "request": "static/examples/sos_v20/requests_soap/GetObservation.xml"
                }
            },
            "GetFeatureOfInterest": {
                "GetFeatureOfInterest": {
                    "request": "static/examples/sos_v20/requests_soap/GetFeatureOfInterest.xml"
                }
            },
            "GetObservationById": {
                "GetObservationById": {
                    "request": "static/examples/sos_v20/requests_soap/GetObservationById.xml"
                }
            },
            "InsertResultTemplate": {
                "InsertResultTemplate": {
                    "request": "static/examples/sos_v20/requests_soap/ResultHandling/InsertResultTemplate.xml"
                }
            },
            "InsertResult": {
                "InsertResult": {
                    "request": "static/examples/sos_v20/requests_soap/ResultHandling/InsertResult.xml"
                }
            },
            "GetResult": {
                "GetResult": {
                    "request": "static/examples/sos_v20/requests_soap/ResultHandling/GetResult.xml"
                }
            },
            "GetResultTemplate": {
                "GetResultTemplate": {
                    "request": "static/examples/sos_v20/requests_soap/ResultHandling/GetResultTemplate.xml"
                }
            },
            "DeleteSensor": {
                "DeleteSensor": {
                    "request": "static/examples/sos_v20/requests_soap/Transactional/DeleteSensor.xml"
                }
            },
            "InsertObservation": {
                "InsertObservation (Category)": {
                    "request": "static/examples/sos_v20/requests_soap/Transactional/InsertObservation_Category.xml"
                },
                "InsertObservation (Count)": {
                    "request": "static/examples/sos_v20/requests_soap/Transactional/InsertObservation_Count.xml"
                },
                "InsertObservation (Measurement)": {
                    "request": "static/examples/sos_v20/requests_soap/Transactional/InsertObservation_Measurement.xml"
                },
                "InsertObservation (Text)": {
                    "request": "static/examples/sos_v20/requests_soap/Transactional/InsertObservation_Text.xml"
                },
                "InsertObservation (Truth)": {
                    "request": "static/examples/sos_v20/requests_soap/Transactional/InsertObservation_Truth.xml"
                },
                "InsertObservation (SweArray)": {
                    "request": "static/examples/sos_v20/requests_soap/Transactional/InsertObservation_SweArray.xml"
                },
                "InsertObservation (Multiple observations)": {
                    "request": "static/examples/sos_v20/requests_soap/Transactional/InsertObservation_Multiple.xml"
                }
            },
            "InsertSensor": {
                "InsertSensor": {
                    "request": "static/examples/sos_v20/requests_soap/Transactional/InsertSensor.xml"
                }
            },
            "UpdateSensorDescription": {
                "UpdateSensorDescription": {
                    "request": "static/examples/sos_v20/requests_soap/Transactional/UpdateSensorDescription.xml"
                }
            },
            "GetDataAvailability": {
                "GetDataAvailability": {
                    "request": "static/examples/sos_v20/requests_soap/GetDataAvailability.xml"
                }
            }
        },
        "/pox": {
            "GetCapabilities": {
                "GetCapabilities": {
                    "request": "static/examples/sos_v20/requests_xml/GetCapabilities.xml"
                }
            },
            "DescribeSensor": {
                "DescribeSensor": {
                    "request": "static/examples/sos_v20/requests_xml/DescribeSensor.xml"
                }
            },
            "GetObservation": {
                "GetObservation": {
                    "request": "static/examples/sos_v20/requests_xml/GetObservation.xml"
                }
            },
            "GetFeatureOfInterest": {
                "GetFeatureOfInterest": {
                    "request": "static/examples/sos_v20/requests_xml/GetFeatureOfInterest.xml"
                }
            },
            "GetObservationById": {
                "GetObservationById": {
                    "request": "static/examples/sos_v20/requests_xml/GetObservationById.xml"
                }
            },
            "InsertResultTemplate": {
                "InsertResultTemplate": {
                    "request": "static/examples/sos_v20/requests_xml/ResultHandling/InsertResultTemplate.xml"
                }
            },
            "InsertResult": {
                "InsertResult": {
                    "request": "static/examples/sos_v20/requests_xml/ResultHandling/InsertResult.xml"
                }
            },
            "GetResult": {
                "GetResult": {
                    "request": "static/examples/sos_v20/requests_xml/ResultHandling/GetResult.xml"
                }
            },
            "GetResultTemplate": {
                "GetResultTemplate": {
                    "request": "static/examples/sos_v20/requests_xml/ResultHandling/GetResultTemplate.xml"
                }
            },
            "DeleteSensor": {
                "DeleteSensor": {
                    "request": "static/examples/sos_v20/requests_xml/Transactional/DeleteSensor.xml"
                }
            },
            "InsertObservation": {
                "InsertObservation (Category)": {
                    "request": "static/examples/sos_v20/requests_xml/Transactional/InsertObservation_Category.xml"
                },
                "InsertObservation (Count)": {
                    "request": "static/examples/sos_v20/requests_xml/Transactional/InsertObservation_Count.xml"
                },
                "InsertObservation (Measurement)": {
                    "request": "static/examples/sos_v20/requests_xml/Transactional/InsertObservation_Measurement.xml"
                },
                "InsertObservation (Text)": {
                    "request": "static/examples/sos_v20/requests_xml/Transactional/InsertObservation_Text.xml"
                },
                "InsertObservation (Truth)": {
                    "request": "static/examples/sos_v20/requests_xml/Transactional/InsertObservation_Truth.xml"
                }
            },
            "InsertSensor": {
                "InsertSensor": {
                    "request": "static/examples/sos_v20/requests_xml/Transactional/InsertSensor.xml"
                }
            },
            "UpdateSensorDescription": {
                "UpdateSensorDescription": {
                    "request": "static/examples/sos_v20/requests_xml/Transactional/UpdateSensorDescription.xml"
                }
            },
            "GetDataAvailability": {
                "GetDataAvailability": {
                    "request": "static/examples/sos_v20/requests_xml/GetDataAvailability.xml"
                }
            }
        }
    }
}
